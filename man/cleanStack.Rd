% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleanStack.R
\name{cleanStack}
\alias{cleanStack}
\title{Clean Image Stack}
\usage{
cleanStack(Stack, nvoxel = 0)
}
\arguments{
\item{Stack}{a binary image stack object}

\item{nvoxel}{maximum number of 3D pixels (voxels) considered as isolated islands}
}
\value{
An array of the same dimension as \code{Stack} with 3D pixel islands removed.
}
\description{
Delete single pixels or isolated pixel islands from an image stack. The pixels are checked in 3D (voxels).
}
\details{
\code{cleanStack} uses the 'connected component' algorithm (using the function \code{components} in the package 'mmand') to find isolated pixel islands in the 3D volume of the image stack. The islands are then deleted from the stack.
The function works on binary images, assuming that background pixels are of value '0'. \code{cleanStack} checks the neighborhood of 3D pixels (voxels) to find clusters that are disconnected from other pixels. The 26 neighbors of each 3D pixels
are checked using a 'box' kernel defined within the function. The argument \code{nvoxel} specifies the maximum number of 3D pixels that are considered an island: islands consisting of a number of 3D pixels lower or equal to \code{nvoxel} are
deleted. When \code{nvoxel} has value '0' (default) all but the largest pixel island are removed.
}
\author{
Alessio Veneziano
}
